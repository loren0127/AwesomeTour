<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	                    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	                    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- 빈 자동 스캔 - servlet-context.xml에서
	Controller를 자동 스캔 설정해서 아래 설정에서는
	Controller를 자동 스캔 제외 -->
	<context:component-scan base-package="kr.spring">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- JDBC 기반 트랜잭션 관리자 설정 -->
	<bean id="transactionManager"
	     class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
	     p:dataSource-ref="dataSource"/>
	
	<context:property-placeholder 
	       location="classpath:config/jdbc.properties"/>
	
	<!-- 커넥션 풀을 이용한 DataSource 설정 -->
	<bean id="dataSource"
	        class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/> 
		<property name="password" value="${jdbc.password}"/>
		<!-- 최대 커넥션 개수 -->
		<property name="maxActive" value="50"/>
		<!-- 접속이 없을 경우 최대 유지 커넥션 개수 -->
		<property name="maxIdle" value="30"/>
		<!-- 최대 대기시간(초) : 초과시 연결 실패 오류 발생 -->
		<property name="maxWait" value="5"/>       
	</bean>

	<!-- 선언적 트랜잭션 처리 -->
	<tx:advice id="txAdvice" 
	         transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*"/>
			<tx:method name="update*"/>
			<tx:method name="delete*"/><!-- service쪽에 delete라고 명시안하고 다른걸 명시하면 그걸로 적어주어야함 -->
			<tx:method name="select*" read-only="true"/>
		</tx:attributes>         
	</tx:advice>
	
	<!-- 
	tx:method의 속성
	속성이름			설명
	name			트랜잭션이 적용될 메서드 이름을 명시
	                '*'을 사용한 설정이 가능.
	                예를 들어, "get*"으로 설정할 경우 
	                이름이 get으로 시작하는 메서드를 의미
	                "*get"은 인정되지 않음
	propagation		트랜잭션 전파 규칙을 설정
	isolation		트랜젹션 격리 레벨을 설정
	read-only		읽기 전용 여부를 설정
	no-rollback-for	트랜잭션을 롤백하지 않을 예외 타입
	                 설정
	rollback-for    트랜잭션을 롤백할 예외 타입을 설정
	timeout			트랜잭션의 타임 아웃 시간을 초 단위
	                 로 설정                                 
	 -->
	
	<aop:config>
		<aop:pointcut expression="execution(public * kr.spring..*ServiceImpl.*(..))" id="servicePublicMethod"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="servicePublicMethod"/>              
	</aop:config>
	
	<!-- mybatis 설정 -->
	<bean id="sqlSessionFactory"
	      class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/> 
		<property name="typeAliasesPackage" 
		                   value="kr.spring.member.domain,
		                          kr.spring.board.domain,
		                          kr.spirng.chat.domain"/>
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" 
		              value="kr.spring.member.dao,
		                     kr.spring.board.dao,
		                     kr.spring.chat.dao" />
	</bean>
	
	<!-- 암호화,복호화 알고리즘 처리 -->
	<bean id="cipherAES" class="kr.spring.util.CipherTemplate">
		<property name="algorithm" value="AES"/>                                     
		<property name="secretKey" value="ibvlqxkqsokz4xyrgpljfcgu9"/>
	</bean>
	
	
	 <!-- 메일보내기 -->
   <bean id="mailSender" class = "org.springframework.mail.javamail.JavaMailSenderImpl">
      <property name="host" value="smtp.gmail.com" />
      <property name="port" value="587" />
      <property name="username" value="ghcks3916@gmail.com" />
      <property name="password" value="cks0108662" />
      <property name="javaMailProperties">
         <props>
               <prop key="mail.transport.protocol">smtp</prop>
               <prop key="mail.smtp.auth">true</prop>
               <prop key="mail.smtp.starttls.enable">true</prop>
               <prop key="mail.debug">true</prop>
         </props>
      </property>
   </bean>
	
</beans>





