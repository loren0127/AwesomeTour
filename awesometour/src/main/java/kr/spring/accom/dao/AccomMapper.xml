<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace는 식별자라서 여러 개의 mapper를 만들었을 때 구별하기 위해 유니크 해야 함 -->
<mapper namespace="kr.spring.accom.dao.AccomMapper">
	<!-- 
	id : myBatis에서 제공하는 메소드가 받는 식별자로 DAO가 SQL문을 받을 수 있게 해준다.
		 단, 어노테이션 방식으로 myBatis가 설정되었을 경우 id와 메소드명이 일치하면 해당 메소드로 자동 인식
	parameterType : 인자로 전달되는 데이터의 타입
	resultType : 한 건의 데이터를 자바빈에 담는다. (List라고 명시하면 SQL문에 의해 데이터가 처리되기 전 상태라 객체가 비어있어서 예외 발생)
	-->
	<select id="selectList" parameterType="java.util.Map" resultType="AccomCommand">
		SELECT price.*, grade.ag_grade, auth.member_auth, review.review_count FROM
		(SELECT a.*, r.ro_price, r.ro_sub FROM accom a, accom_room r where
		a.acc_num = r.ro_acc_num ORDER BY r.ro_sub ASC)price RIGHT OUTER JOIN
		(SELECT a.*, m.member_auth, m.member_email FROM accom a, member_auth m
		where a.acc_host = m.member_email)auth ON price.acc_host =
		auth.member_email LEFT OUTER JOIN
		(SELECT * FROM ((SELECT * FROM accom)a) JOIN (SELECT ag_acc_num,
		ROUND(AVG(ag_grade), 1)ag_grade FROM accom_grade GROUP BY ag_acc_num)b
		ON a.acc_num = b.ag_acc_num)grade
		ON price.acc_num = grade.acc_num LEFT OUTER JOIN
		(SELECT * FROM ((SELECT * FROM accom)a) JOIN (SELECT re_acc_num, COUNT(*)review_count
		FROM accom_review GROUP BY re_acc_num)b ON a.acc_num =
		b.re_acc_num)review ON grade.ag_acc_num = review.re_acc_num 
			<if test="orderby == 'rating'"><!-- orderby는 컨트롤러에서 메소드 파라미터의 이름!!! -->
				WHERE grade.ag_grade is not null ORDER BY grade.ag_grade DESC
			</if>
			<if test="orderby == 'recommend'"><!-- orderby는 컨트롤러에서 메소드 파라미터의 이름!!! -->
				<![CDATA[
					WHERE auth.MEMBER_AUTH = 3 ORDER BY price.ro_sub
				]]>
			</if>
			<if test="orderby == 'minimum'"><!-- orderby는 컨트롤러에서 메소드 파라미터의 이름!!! -->
				ORDER BY price.ro_price ASC
			</if>
	</select>
	
	<!-- 호텔 이미지 불러오기 -->
	<!-- <select id="selectHotelImage" parameterType="map" resultType="hotelDetailCommand">
		SELECT 
		  i.im_cover,
		  i.im_cover_name,
		  i.im_image2,
		  i.im_image2_name,
		  i.im_image3,
		  i.im_image3_name,
		  i.im_ro_num,
		  b.ro_room_num
	   FROM accom_image i 
	   JOIN 
	      (SELECT ro_num,ro_room_num 
	         FROM accom_room 
	         WHERE ro_acc_num=#{im_ac_num})b ON i.im_ro_num=b.ro_num WHERE b.ro_room_num=#{ro_room_num}
	</select> -->
	
</mapper>
